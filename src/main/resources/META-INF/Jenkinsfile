pipeline {
    agent any
    environment {
      appName="shiro-action"
      deployName="${appName}-deployment"
      deployFileName="${deployName}.yml"
      //下次补充关闭项目 滚动更新 探针 制作docker项目镜像 以及 搭建镜像管理 gitlab helm等
    }
    parameters {
       choice(name: 'UPGRADE_TYPE',choices: 'compulsion-update\nrolling-update', description: 'rolling-update：滚动升级；\n compulsion-update：强制升级；【慎用】')
    }
    stages {
        stage('build') {
            agent {
               docker {
               image 'maven:3.3.3'
               args '-v /root/.m2:/root/.m2 -v /home/shiro-action/:/home/shiro-action/'
               }
            }
            steps {
                sh 'mvn clean package'
                sh 'cp target/shiro-action-0.6.jar /home/shiro-action/shiro-action.jar'
            }
        }
        stage('deployment') {
           steps {
             script {
                //echo \"\"返回默认值
                def container = sh(script:'kubectl get pods |awk {print\"$1\"} |grep ${appName} || echo \"\" ',returnStdout:true).trim()
                 if(container != ""){
                     switch("${params.UPGRADE_TYPE}"){
                        case "roll-update":
                          echo '进行滚动更新'
                          sh 'kubectl apply -f ${WORKSPACE}/src/main/resources/META-INF/k8s/${deployFileName}'
                          sh 'kubectl rollout status deployment ${deployName}'
                          break
                       case "compulsion-update":
                          echo '进行强制更新'
                          sh 'kubectl delete -f ${WORKSPACE}/src/main/resources/META-INF/k8s/${deployFileName} --ignore-not-found=true'
                          sh 'kubectl apply -f ${WORKSPACE}/src/main/resources/META-INF/k8s/${deployFileName}'
                          break
                     }
                 }else{
                   echo '启动项目'
                   sh 'kubectl apply -f ${WORKSPACE}/src/main/resources/META-INF/k8s/${deployFileName}'
                 }
             }
           }
        }

    }

}